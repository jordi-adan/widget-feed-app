name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run linting
      working-directory: ./backend
      run: npm run lint || echo "Linting not configured yet"

    - name: Run tests
      working-directory: ./backend
      run: npm test

    - name: Run tests with coverage
      working-directory: ./backend
      run: npm test -- --coverage --coverageReporters=text-lcov

    - name: Check coverage threshold
      working-directory: ./backend
      run: |
        echo "Running coverage check..."
        
        # Run coverage and capture output
        npm run test:coverage:ci > coverage_output.txt 2>&1 || COVERAGE_EXIT_CODE=$?
        
        # Display coverage results
        echo "=== Coverage Report ==="
        cat coverage_output.txt
        echo "======================"
        
        # Check if Jest coverage thresholds were met
        if grep -q "Jest.*coverage threshold.*not met" coverage_output.txt; then
          echo "❌ Coverage threshold not met based on Jest output"
          exit 1
        elif [ "${COVERAGE_EXIT_CODE:-0}" -ne 0 ]; then
          echo "❌ Tests failed with exit code: ${COVERAGE_EXIT_CODE:-0}"
          exit 1
        else
          echo "✅ Coverage thresholds met!"
        fi

    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        directory: ./backend/coverage/
        flags: backend
        name: codecov-backend
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build project
      working-directory: ./backend
      run: npm run build

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: backend/dist/
